/*Given n, how many structurally unique BST's (binary search trees) that store values 1...n?

For example,
Given n = 3, there are a total of 5 unique BST's.

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3*/


class Solution {
public:
    int numTrees(int n) {
        vector<int> c(n+1,1);
        if(n==1) return 1;
        for(int i=1;i<n+1;i++)
        {
            for(int j=1;j<=i;j++)
            {
                c[i]+=c[j-1]*c[i-j];
            }
            c[i]--;
        }
        return c[n];
    }
};