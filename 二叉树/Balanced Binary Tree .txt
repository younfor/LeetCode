Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.

Show Tags
/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int height(TreeNode *t,bool &flag)
    {
    	if (t)
    	{
    		int l = height(t->left,flag);
    		int r = height(t->right,flag);
    		if (l - r > 1 || l - r < -1)
    			flag = false;
    		return l>r ? l + 1 : r + 1;
    	}
    	else
    	{
    		return 0;
    	}
    }
    bool isBalanced(TreeNode *root) {
    	bool flag = true;
    	height(root, flag);
    	return flag;
    }
};